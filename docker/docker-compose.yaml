services:
  tb4_mpc:
    image: tb4_mpc:latest
    container_name: tb4_mpc
    privileged: true
    network_mode: "host"
    ipc: "host"
    command: /bin/bash
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      QT_X11_NO_MITSHM: 1
      DISPLAY: ${DISPLAY}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /dev/dri:/dev/dri
      - /dev/nvidia0:/dev/nvidia0
      - /dev/nvidiactl:/dev/nvidiactl
      - /dev/nvidia-uvm:/dev/nvidia-uvm
      - /home/kuralme/DockerWs/Tb4_MPC/turtlebot4_mpc_simulation/tb4_mpc_bringup:/home/ros2_ws/src/tb4_mpc/tb4_mpc_bringup
      - /home/kuralme/DockerWs/Tb4_MPC/turtlebot4_mpc_simulation/tb4_mpc_description:/home/ros2_ws/src/tb4_mpc/tb4_mpc_description
      - /home/kuralme/DockerWs/Tb4_MPC/turtlebot4_mpc_simulation/tb4_mpc_nav:/home/ros2_ws/src/tb4_mpc/tb4_mpc_nav
      - /home/kuralme/DockerWs/Tb4_MPC/turtlebot4_mpc_simulation/tb4_mpc_sim:/home/ros2_ws/src/tb4_mpc/tb4_mpc_sim
    ulimits:
      memlock:
        soft: -1
        hard: -1
      stack:
        soft: 67108864
        hard: 67108864
    stdin_open: true
    tty: true
    entrypoint: ["/home/ros_entrypoint.sh"]

# Optional: Set up xhost permissions before running the container (this isn't directly a part of Compose)
# This can be handled in a pre-start script or manually, as Docker Compose doesn't handle xhost permissions directly
